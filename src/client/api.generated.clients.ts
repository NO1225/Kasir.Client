/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, CancelToken } from 'axios';

import * as moment from 'moment';

export interface IAppInfoClient {
    info(languageId?: number | undefined): Promise<ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>;
}

export class AppInfoClient implements IAppInfoClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    info(languageId?: number | undefined , cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        let url_ = this.baseUrl + "/api/AppInfo/Info?";
        if (languageId === null)
            throw new Error("The parameter 'languageId' cannot be null.");
        else if (languageId !== undefined)
            url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ = <AxiosRequestConfig>{
            method: "GET",
            url: url_,
            headers: {
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processInfo(_response);
        });
    }

    protected processInfo(response: AxiosResponse): Promise<ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(<any>null);
    }
}

export interface ICountriesClient {
    getAll(languageId?: number | undefined): Promise<ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>;
}

export class CountriesClient implements ICountriesClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    getAll(languageId?: number | undefined , cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        let url_ = this.baseUrl + "/api/Countries/GetAll?";
        if (languageId === null)
            throw new Error("The parameter 'languageId' cannot be null.");
        else if (languageId !== undefined)
            url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ = <AxiosRequestConfig>{
            method: "GET",
            url: url_,
            headers: {
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processGetAll(_response);
        });
    }

    protected processGetAll(response: AxiosResponse): Promise<ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(<any>null);
    }
}

export interface ILanguagesClient {
    getAll(): Promise<ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>;
}

export class LanguagesClient implements ILanguagesClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    getAll(  cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        let url_ = this.baseUrl + "/api/Languages/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ = <AxiosRequestConfig>{
            method: "GET",
            url: url_,
            headers: {
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processGetAll(_response);
        });
    }

    protected processGetAll(response: AxiosResponse): Promise<ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(<any>null);
    }
}

export interface IClient {
    login(query: GetTokenQuery): Promise<ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>;
}

export class Client implements IClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    login(query: GetTokenQuery , cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        let url_ = this.baseUrl + "/Login";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(query);

        let options_ = <AxiosRequestConfig>{
            data: content_,
            method: "POST",
            url: url_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processLogin(_response);
        });
    }

    protected processLogin(response: AxiosResponse): Promise<ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(<any>null);
    }
}

export interface IAuthClient {
    addPushToken(command: CreatePushTokenCommand): Promise<ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>;
}

export class AuthClient implements IAuthClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    addPushToken(command: CreatePushTokenCommand , cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        let url_ = this.baseUrl + "/api/Auth/AddPushToken";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ = <AxiosRequestConfig>{
            data: content_,
            method: "POST",
            url: url_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processAddPushToken(_response);
        });
    }

    protected processAddPushToken(response: AxiosResponse): Promise<ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(<any>null);
    }
}

export interface IWordsClient {
    getAll(languageId?: number | undefined, countryId?: number | undefined): Promise<ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>;
}

export class WordsClient implements IWordsClient {
    private instance: AxiosInstance;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, instance?: AxiosInstance) {
        this.instance = instance ? instance : axios.create();
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    getAll(languageId?: number | undefined, countryId?: number | undefined , cancelToken?: CancelToken | undefined): Promise<ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        let url_ = this.baseUrl + "/api/Words/GetAll?";
        if (languageId === null)
            throw new Error("The parameter 'languageId' cannot be null.");
        else if (languageId !== undefined)
            url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
        if (countryId === null)
            throw new Error("The parameter 'countryId' cannot be null.");
        else if (countryId !== undefined)
            url_ += "CountryId=" + encodeURIComponent("" + countryId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ = <AxiosRequestConfig>{
            method: "GET",
            url: url_,
            headers: {
                "Accept": "application/json"
            },
            cancelToken
        };

        return this.instance.request(options_).catch((_error: any) => {
            if (isAxiosError(_error) && _error.response) {
                return _error.response;
            } else {
                throw _error;
            }
        }).then((_response: AxiosResponse) => {
            return this.processGetAll(_response);
        });
    }

    protected processGetAll(response: AxiosResponse): Promise<ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e> {
        const status = response.status;
        let _headers: any = {};
        if (response.headers && typeof response.headers === "object") {
            for (let k in response.headers) {
                if (response.headers.hasOwnProperty(k)) {
                    _headers[k] = response.headers[k];
                }
            }
        }
        let _mappings: { source: any, target: any }[] = [];
        if (status === 200) {
            const _responseText = response.data;
            let result200: any = null;
            let resultData200  = _responseText;
            result200 = ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e.fromJS(resultData200, _mappings);
            return result200;
        } else if (status !== 200 && status !== 204) {
            const _responseText = response.data;
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        }
        return Promise.resolve<ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(<any>null);
    }
}

export class ServiceResult implements IServiceResult {
    succeeded!: boolean;
    error!: ServiceError | undefined;

    constructor(data?: IServiceResult) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.succeeded = _data["succeeded"];
            this.error = _data["error"] ? ServiceError.fromJS(_data["error"], _mappings) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult>(data, _mappings, ServiceResult);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["succeeded"] = this.succeeded;
        data["error"] = this.error ? this.error.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IServiceResult {
    succeeded: boolean;
    error: ServiceError | undefined;
}

export class ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends ServiceResult implements IServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null {
    data!: AppInfo | undefined;

    constructor(data?: IServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            this.data = _data["data"] ? AppInfo.fromJS(_data["data"], _mappings) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(data, _mappings, ServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfAppInfoAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends IServiceResult {
    data: AppInfo | undefined;
}

export class AppInfo implements IAppInfo {
    title!: string | undefined;
    description!: string | undefined;
    disclaimer!: string | undefined;
    welcome!: string | undefined;

    constructor(data?: IAppInfo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.title = _data["title"];
            this.description = _data["description"];
            this.disclaimer = _data["disclaimer"];
            this.welcome = _data["welcome"];
        }
    }

    static fromJS(data: any, _mappings?: any): AppInfo | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<AppInfo>(data, _mappings, AppInfo);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["title"] = this.title;
        data["description"] = this.description;
        data["disclaimer"] = this.disclaimer;
        data["welcome"] = this.welcome;
        return data; 
    }
}

export interface IAppInfo {
    title: string | undefined;
    description: string | undefined;
    disclaimer: string | undefined;
    welcome: string | undefined;
}

export class ServiceError implements IServiceError {
    message!: string | undefined;
    code!: number;

    constructor(data?: IServiceError) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.message = _data["message"];
            this.code = _data["code"];
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceError | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceError>(data, _mappings, ServiceError);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["message"] = this.message;
        data["code"] = this.code;
        return data; 
    }
}

export interface IServiceError {
    message: string | undefined;
    code: number;
}

export class ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends ServiceResult implements IServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e {
    data!: Country[] | undefined;

    constructor(data?: IServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(Country.fromJS(item, _mappings));
            }
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(data, _mappings, ServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfList_1OfOfCountryAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends IServiceResult {
    data: Country[] | undefined;
}

export class Country implements ICountry {
    id!: number;
    name!: string | undefined;
    imagePath!: string | undefined;
    createDate!: moment.Moment;

    constructor(data?: ICountry) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.imagePath = _data["imagePath"];
            this.createDate = _data["createDate"] ? moment.parseZone(_data["createDate"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): Country | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<Country>(data, _mappings, Country);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["imagePath"] = this.imagePath;
        data["createDate"] = this.createDate ? this.createDate.toISOString(true) : <any>undefined;
        return data; 
    }
}

export interface ICountry {
    id: number;
    name: string | undefined;
    imagePath: string | undefined;
    createDate: moment.Moment;
}

export class ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends ServiceResult implements IServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e {
    data!: Language[] | undefined;

    constructor(data?: IServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(Language.fromJS(item, _mappings));
            }
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(data, _mappings, ServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfList_1OfOfLanguageAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends IServiceResult {
    data: Language[] | undefined;
}

export class Language implements ILanguage {
    id!: number;
    name!: string | undefined;
    imagePath!: string | undefined;
    createDate!: moment.Moment;

    constructor(data?: ILanguage) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.imagePath = _data["imagePath"];
            this.createDate = _data["createDate"] ? moment.parseZone(_data["createDate"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): Language | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<Language>(data, _mappings, Language);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["imagePath"] = this.imagePath;
        data["createDate"] = this.createDate ? this.createDate.toISOString(true) : <any>undefined;
        return data; 
    }
}

export interface ILanguage {
    id: number;
    name: string | undefined;
    imagePath: string | undefined;
    createDate: moment.Moment;
}

export class ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends ServiceResult implements IServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null {
    data!: LoginResponse | undefined;

    constructor(data?: IServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            this.data = _data["data"] ? LoginResponse.fromJS(_data["data"], _mappings) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(data, _mappings, ServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfLoginResponseAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends IServiceResult {
    data: LoginResponse | undefined;
}

export class LoginResponse implements ILoginResponse {
    user!: ApplicationUser | undefined;
    token!: string | undefined;

    constructor(data?: ILoginResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.user = _data["user"] ? ApplicationUser.fromJS(_data["user"], _mappings) : <any>undefined;
            this.token = _data["token"];
        }
    }

    static fromJS(data: any, _mappings?: any): LoginResponse | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<LoginResponse>(data, _mappings, LoginResponse);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["user"] = this.user ? this.user.toJSON() : <any>undefined;
        data["token"] = this.token;
        return data; 
    }
}

export interface ILoginResponse {
    user: ApplicationUser | undefined;
    token: string | undefined;
}

export class ApplicationUser implements IApplicationUser {
    id!: string | undefined;
    userName!: string | undefined;
    email!: string | undefined;

    constructor(data?: IApplicationUser) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.id = _data["id"];
            this.userName = _data["userName"];
            this.email = _data["email"];
        }
    }

    static fromJS(data: any, _mappings?: any): ApplicationUser | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ApplicationUser>(data, _mappings, ApplicationUser);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["userName"] = this.userName;
        data["email"] = this.email;
        return data; 
    }
}

export interface IApplicationUser {
    id: string | undefined;
    userName: string | undefined;
    email: string | undefined;
}

export class GetTokenQuery implements IGetTokenQuery {
    email!: string | undefined;
    password!: string | undefined;

    constructor(data?: IGetTokenQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.email = _data["email"];
            this.password = _data["password"];
        }
    }

    static fromJS(data: any, _mappings?: any): GetTokenQuery | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<GetTokenQuery>(data, _mappings, GetTokenQuery);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["email"] = this.email;
        data["password"] = this.password;
        return data; 
    }
}

export interface IGetTokenQuery {
    email: string | undefined;
    password: string | undefined;
}

export class ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends ServiceResult implements IServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null {
    data!: PushToken | undefined;

    constructor(data?: IServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            this.data = _data["data"] ? PushToken.fromJS(_data["data"], _mappings) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null>(data, _mappings, ServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfPushTokenAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_null extends IServiceResult {
    data: PushToken | undefined;
}

export class PushToken implements IPushToken {
    token!: string | undefined;

    constructor(data?: IPushToken) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.token = _data["token"];
        }
    }

    static fromJS(data: any, _mappings?: any): PushToken | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<PushToken>(data, _mappings, PushToken);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        return data; 
    }
}

export interface IPushToken {
    token: string | undefined;
}

export class CreatePushTokenCommand implements ICreatePushTokenCommand {
    token!: string | undefined;

    constructor(data?: ICreatePushTokenCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.token = _data["token"];
        }
    }

    static fromJS(data: any, _mappings?: any): CreatePushTokenCommand | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<CreatePushTokenCommand>(data, _mappings, CreatePushTokenCommand);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        return data; 
    }
}

export interface ICreatePushTokenCommand {
    token: string | undefined;
}

export class ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends ServiceResult implements IServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e {
    data!: Word[] | undefined;

    constructor(data?: IServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e) {
        super(data);
    }

    init(_data?: any, _mappings?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(Word.fromJS(item, _mappings));
            }
        }
    }

    static fromJS(data: any, _mappings?: any): ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e>(data, _mappings, ServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IServiceResult_1OfOfList_1OfOfWordAndApplicationAnd_0AndCulture_neutralAndPublicKeyToken_nullAndCoreLibAnd_0AndCulture_neutralAndPublicKeyToken_7cec85d7bea7798e extends IServiceResult {
    data: Word[] | undefined;
}

export class Word implements IWord {
    id!: number;
    title!: string | undefined;
    name!: string | undefined;
    information!: string | undefined;
    imageName!: string | undefined;
    createDate!: moment.Moment;

    constructor(data?: IWord) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any, _mappings?: any) {
        if (_data) {
            this.id = _data["id"];
            this.title = _data["title"];
            this.name = _data["name"];
            this.information = _data["information"];
            this.imageName = _data["imageName"];
            this.createDate = _data["createDate"] ? moment.parseZone(_data["createDate"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any, _mappings?: any): Word | null {
        data = typeof data === 'object' ? data : {};
        return createInstance<Word>(data, _mappings, Word);
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["title"] = this.title;
        data["name"] = this.name;
        data["information"] = this.information;
        data["imageName"] = this.imageName;
        data["createDate"] = this.createDate ? this.createDate.toISOString(true) : <any>undefined;
        return data; 
    }
}

export interface IWord {
    id: number;
    title: string | undefined;
    name: string | undefined;
    information: string | undefined;
    imageName: string | undefined;
    createDate: moment.Moment;
}

function jsonParse(json: any, reviver?: any) {
    json = JSON.parse(json, reviver);

    var byid: any = {};
    var refs: any = [];
    json = (function recurse(obj: any, prop?: any, parent?: any) {
        if (typeof obj !== 'object' || !obj)
            return obj;
        
        if ("$ref" in obj) {
            let ref = obj.$ref;
            if (ref in byid)
                return byid[ref];
            refs.push([parent, prop, ref]);
            return undefined;
        } else if ("$id" in obj) {
            let id = obj.$id;
            delete obj.$id;
            if ("$values" in obj)
                obj = obj.$values;
            byid[id] = obj;
        }
        
        if (Array.isArray(obj)) {
            obj = obj.map((v, i) => recurse(v, i, obj));
        } else {
            for (var p in obj) {
                if (obj.hasOwnProperty(p) && obj[p] && typeof obj[p] === 'object')
                    obj[p] = recurse(obj[p], p, obj);
            }
        }

        return obj;
    })(json);

    for (let i = 0; i < refs.length; i++) {
        const ref = refs[i];
        ref[0][ref[1]] = byid[ref[2]];
    }

    return json;
}

function createInstance<T>(data: any, mappings: any, type: any): T | null {
  if (!mappings)
    mappings = [];
  if (!data)
    return null;

  const mappingIndexName = "__mappingIndex";
  if (data[mappingIndexName])
    return <T>mappings[data[mappingIndexName]].target;

  data[mappingIndexName] = mappings.length;

  let result: any = new type();
  mappings.push({ source: data, target: result });
  result.init(data, mappings);
  return result;
}

export class ApiException extends Error {
    message: string;
    status: number;
    response: string;
    headers: { [key: string]: any; };
    result: any;

    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
        super();

        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }

    protected isApiException = true;

    static isApiException(obj: any): obj is ApiException {
        return obj.isApiException === true;
    }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {
    if (result !== null && result !== undefined)
        throw result;
    else
        throw new ApiException(message, status, response, headers, null);
}

function isAxiosError(obj: any | undefined): obj is AxiosError {
    return obj && obj.isAxiosError === true;
}